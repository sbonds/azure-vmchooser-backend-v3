name: 3.0.$(Build.BuildId)
resources:
  repositories:
  - repository: vmchooserbackendv3
    type: github
    name: vmchooser/azure-vmchooser-backend-v3
    endpoint: vmchooser
trigger:
  batch: true
  branches:
    include:
    - master
stages:
- stage: BuildFunctionApp
  displayName: Build & Push Function App
  jobs:
  - job: BuildFunctionApp
    pool:
      vmImage: 'VS2017-Win2016'
    steps:
    - script: |
        dotnet restore
        dotnet build --configuration Release
    - task: DotNetCoreCLI@2
      inputs:
        command: publish
        arguments: '--configuration Release --output publish_output'
        projects: '*.csproj'
        publishWebProjects: false
        modifyOutputPath: true
        zipAfterPublish: false
    - task: ArchiveFiles@2
      displayName: "Archive files"
      inputs:
        rootFolderOrFile: "$(System.DefaultWorkingDirectory)/publish_output/s"
        includeRootFolder: false
        archiveFile: "$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip"
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/build$(Build.BuildId).zip'
        ArtifactName: 'vmchooserbackend'
- stage: DeployDev
  displayName: Deploy to Dev
  jobs: 
    - deployment: DeployDev
      variables:
      - group: vmchooser
      - group: vmchooserdev
      environment: 'vmchooserdev'
      strategy: 
        runOnce:
          deploy:          
            pool: 
              vmImage: 'ubuntu-latest'
            steps:
            - download: current
              artifact: vmchooserbackend
            - task: AzureRmWebAppDeployment@4
              inputs:
                connectionType: 'AzureRM'
                azureSubscription: 'vmchooser.arm'
                appType: 'functionApp'
                webAppName: 'vmchooser-dev-func-be'
                Package: $(Agent.BuildDirectory)/**/*.zip
- stage: DeployPrd
  displayName: Deploy to Prd
  jobs: 
    - deployment: DeployPrd
      variables:
      - group: vmchooser
      - group: vmchooserdev
      environment: 'vmchooserprd'
      strategy: 
        runOnce:
          deploy:          
            pool: 
              vmImage: 'ubuntu-latest'
            steps:
            - download: current
              artifact: vmchooserbackend
            - task: AzureRmWebAppDeployment@4
              inputs:
                connectionType: 'AzureRM'
                azureSubscription: 'vmchooser.arm'
                appType: 'functionApp'
                webAppName: 'vmchooser-prd-func-be'
                Package: $(Agent.BuildDirectory)/**/*.zip
